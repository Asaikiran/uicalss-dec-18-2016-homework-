1) what are pseudo classes in css?
=>A CSS pseudo-class is a keyword added to selectors that specifies a special state of the element to be selected. 
For example, when you want to set the style for different states ( active, hover etc ) of the hyperlink, you can not do that by simply selecting the a element. You need to use CSS pseudo classes in these cases.
Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus


2) what are pseudo elements in css?
=>A CSS pseudo-element is used to style specified parts of an element.
they allow logical elements to be defined which are not actually in the document element tree
Pseudo-elements may only be applied to external and document-level contexts - not to in-line styles.
For example, it can be used to:
Style the first letter, or line, of an element
Insert content before, or after, the content of an element


3) diff between pseudo classes and pseudo elements?
=>pseudo-class is a selector that assists in the selection of something that cannot be expressed by a simple selector, for example :hover
A pseudo-element however allows us to create items that do not normally exist in the document tree, for example ``::after`.
pseudo-classes can appear anywhere in selector chain.
Pseudo-elements are restricted in where they can appear in a rule. They may only appear at the end of a selector chain 
Pseudo-classes select regular elements but under certain conditions like when their position relative to siblings or when they’re under a particular state.
Pseudo-elements effectively create new elements that are not specified in the markup of the document and can be manipulated much like a regular element


4) explain all pseudo classes and elements with examples?
pseudo classes
=>:active Selector:
A link becomes active when you click on it.
:active {
    css declarations;
}
:checked Selector:
checks every <input> element (only for radio buttons and checkboxes) and <option> element.
:checked {
    css declarations;
}
:disabled Selector
The :disabled selector matches every disabled element
:disabled {
    css declarations;
}
:empty Selector
it matches every element that has no children
:empty {
    css declarations;
}
:enabled Selector
it matches every enabled element
:enabled {
    css declarations;
}
:first-child Selector
 :first-child selector is used to select, only if it is the first child of its parent.
 :first-child {
    css declarations;
}
:first-of-type Selector
it matches every element that is the first child, of a particular type, of its parent.
:first-of-type {
    css declarations;
}
:focus Selector
it is used to select the element that has focus.
:focus {
    css declarations;
}
:hover Selector
The :hover selector is used to select elements when you mouse over them.
:hover {
    css declarations;
}
:in-range Selector
The :in-range selector selects all elements with a value that is within a specified range.
:in-range {
    css declarations;
}
:invalid Selector
The :invalid selector selects form elements with a value that does not validate according to the element's settings.
:invalid {
    css declarations;
}
:lang Selector
The :lang() selector is used to select elements with a lang attribute with the specified value.
:lang(languagecode) {
    css declarations;
}
:last-child Selector
The :last-child selector matches every element that is the last child of its parent.
:last-child {
    css declarations;
}
:last-of-type Selector
The :last-of-type selector matches every element that is the last child, of a particular type, of its parent.
:last-of-type {
    css declarations;
}
:link Selector
it is used to select unvisited links.
:link {
    css declarations;
}
:not Selector
it matches every element that is NOT the specified element/selector.
:not(selector) {
    css declarations;
}
:nth-child() Selector
The :nth-child(n) selector matches every element that is the nth child, regardless of type, of its parent
n can be a number, a keyword, or a formula.
:nth-child(number) {
    css declarations;
}
:nth-last-child() Selector
The :nth-last-child(n) selector matches every element that is the nth child, regardless of type, of its parent, counting from the last child.
n can be a number, a keyword, or a formula.
:nth-last-child(number) {
    css declarations;
}
:only-of-type Selector
The :only-of-type selector matches every element that is the only child of its type, of its parent.
:only-of-type {
    css declarations;
}
:only-child Selector
The :only-child selector matches every element that is the only child of its parent.
:only-child {
    css declarations;
}
:optional Selector
The :optional selector selects form elements which are optional.
:optional {
    css declarations;
}
:out-of-range Selector
it selects all elements with a value that is outside a specified range
:out-of-range {
    css declarations;
}
:out-of-range Selector
it selects all elements with a value that is outside a specified range.
:out-of-range {
    css declarations;
}
:read-only Selector
it selects elements which are "readonly".
:read-only {
    css declarations;
}
:read-write Selector
it selects form elements which are "readable" and "writeable".
:read-write {
    css declarations;
}
:required Selector
it selects form elements which are required.
:required {
    css declarations;
}
:root Selector
The :root selector matches the document's root element.
:root {
    css declarations;
}
:target Selector
URLs with an # followed by an anchor name link to a certain element within a document. The element being linked to is the target element
:target {
    css declarations;
}
:valid Selector
The :valid selector selects form elements with a value that validates according to the element's settings.
:valid {
    css declarations;
}
:visited Selector
The :visited selector is used to select visited links.
:visited {
    css declarations;
}

Pseudo Elements
::after Selector
The ::after selector inserts something after the content of each selected element(s).
::after {
    css declarations;
}
::before Selector
The ::before selector inserts something before the content of each selected element(s)
::before {
    css declarations;
}
::first-letter Selector
The ::first-letter selector is used to add a style to the first letter of the specified selector.
::first-letter {
    css declarations;
}
::first-line Selector
The ::first-line selector is used to add a style to the first line of the specified selector.
::first-line {
    css declarations;
}
::selection Selector
The ::selection selector matches the portion of an element that is selected by a user.
Only a few CSS properties can be applied to the ::selection selector: color, background, cursor, and outline
::selection {
    css declarations;
}


5) what are media queries in css and how can you use them ?
=>Media query is a CSS technique introduced in CSS3.
It uses the @media rule to include a block of CSS properties only if a certain condition is true
zero or more expressions that limit the style sheets' scope by using media features, such as width, height, and color
let the presentation of content be tailored to a specific range of output devices without having to change the content itself.
When a media query is true, the corresponding style sheet or style rules are applied, following the normal cascading rules.


6) what is responsive web design?
=>Responsive Web design is an approach whereby a designer creates a Web page that “responds to” or resizes itself depending on the type of device
Web pages can be viewed using many different devices: desktops, tablets, and phones. Your web page should look good, and be easy to use, regardless of the device.
it is designed by using only HTML and CSS.
it is not a program or a JavaScript.
It is called responsive web design when you use CSS and HTML to resize, hide, shrink, enlarge, or move the content to make it look good on any screen.











































